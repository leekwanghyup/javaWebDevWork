1. GenericServlet이 없던 시절 
	- Servlet인터페이스는 모든 추상 메서드를 구현해야 한다. 
	- 그런데 반드시 구현해야 하는 메서드는 service()메서드 단 하나뿐이다.
	- 이러한 불편함을 해소하기 위해 등장한 것이 GenericServlet이다.
	
2. GenericServlet의 용도 
	- init(), destory(), getServeltConfig(), getServletInfo()를 미리 구현하여 상속한다. 
	- service()메소드는 각 서블릿에서 구현해야하므로 여기서는 구현하지 않았다.
	- 따라서 서블릿을 구현할 때 GenericServlet을 상속 받는다면 service()메서드만 구현할 수 있다.

3. 계산기 서블리 작성
	- 패키지 : lesson03.servlets 
	- 클래스 명 : CalculatorServlet
	
4. ServletRequest
	- 클라이언트의 요청정보를 가진 객체 
	- getParameter(String) : GET 또는 POST 요청으로 들어온 매개변수값을 가져올 때
	- getRemoteAddr() : 클라이언트의 IP주소 반환
	- getScheme() : 클라이언트가 요청한 URI 형식 scheme반환
		- URL에서 ':'문자 전에 오는 값
		- 자원을 식별하는 최상의 분류 기호 : http, https, ftp, file, news 
	- getProtocol() : 요청프로토콜의 이름과 버전, HTTP/1.1
	- getParameterNames() : 요청정보의 매개변수 이름만 추출하여 반환
	- getParameterValues(String) : 요청정보의 매개변수값만 추출하여 반환
	- getParameterMap() : 모든 매개변수이름과 값을 Map객체에 담아 반환
	- setCharacterEncoding(String) 
		- POST요청의 매개변수에 대한 문자 집합 설정, 기본값 ISO-8859-1
		- getParameter(String) 호출하기전에 설정해야 한다. 
	
5. ServletResponse
	- setContentType(String)
	- setCharacterEncoding(String)
	- 출력 메서드 : 이 메소드를 호출하기전에 setContentType, setCharacterEncoding을 설정해야 한다.
		- getWriter() : 출력 스트림, 문자열 
		- getOutputStream : 출력 스트림 이미지와 동영상 등 바이너리 데이터 
	- 실습 : ServletRequestAndResponse 클래스

6. CalculatorServlet 배치 및 테스트 
	- web.xml 배치정보 추가  
	- 웹 애플리케이션의 변경사항을 적용하려면 서버를 다시 시작해야한다.
	- 요청 : http://localhost:8090/web03/calc?a=20&b=30
	
7. GET 요청으로 넘어온 매개변수 값의 인코딩 설정
	- GET요청에 대한 매개변수 값은 setCharachterEncoding으로 문자집합을 설정할 수 없다.
	- server.xml에서 다음과같이 설정 (톰캣9에서는 기본값이 UTF-8이다.)
		- <Connector connectionTimeout="20000" port="8090" protocol="HTTP/1.1" redirectPort="8443" URIEncoding="UTF-8" />
		
8. @WebServlet 애노테이션을 이용한 서블릿 배치 정보 설정
	- web.xml에서 Calculator서블릿에 대한 배치정보 주석처리 
	- @WebServlet을 이용하여 배치 정보 설정 		
		
	